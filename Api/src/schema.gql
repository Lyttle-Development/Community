# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type GuildModuleLevel {
  guildId: String!
  enabled: Boolean!
  levelingMultiplier: Int!
  announcementChannelId: String
  leaderboardChannelId: String
  leaderboardLastWeek: Int
  nicknames: Boolean!
  lastLeaderboard: Timestamp!
  createdAt: Timestamp!
  updatedAt: Timestamp!
}

"""
`Date` type as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

type GuildMessage {
  id: Int!
  channelId: String!
  messageId: String!
  createdAt: Timestamp!
  updatedAt: Timestamp!
  guild: Guild!
}

type GuildTranslation {
  guildId: String!
  key: String!
  value: String!
  createdAt: Timestamp!
  updatedAt: Timestamp!
  guild: Guild!
}

type MemberModuleLevelDay {
  userId: String!
  guildId: String!
  pointsMonday: Int!
  pointsTuesday: Int!
  pointsWednesday: Int!
  pointsThursday: Int!
  pointsFriday: Int!
  pointsSaturday: Int!
  pointsSunday: Int!
  points: Int!
  createdAt: Timestamp!
  updatedAt: Timestamp!
  guild: Guild!
  member: Member!
}

type MemberModuleLevel {
  userId: String!
  guildId: String!
  spamCheck: Int!
  cooldownCount: Int!
  cooldownTime: Timestamp!
  callStart: Timestamp!
  points: Float!
  createdAt: Timestamp!
  updatedAt: Timestamp!
  memberModuleLevelDay: MemberModuleLevelDay!
  guild: Guild!
  member: Member!
}

type Member {
  userId: String!
  guildId: String!
  birthday: Int
  nickname: String
  createdAt: Timestamp!
  updatedAt: Timestamp!
  guild: Guild!
  getUser: User!
  memberModuleLevel: MemberModuleLevel!
}

type GuildModuleVoiceGrowthChild {
  channelId: String!
  guildId: String!
  name: String!
  createdAt: Timestamp!
  updatedAt: Timestamp!
  guildModuleVoiceGrowthChild: GuildModuleVoiceGrowth!
}

type GuildModuleVoiceGrowth {
  channelId: String!
  guildId: String!
  enabled: Boolean!
  preset: String
  prefix: String
  manual: Boolean!
  createdAt: Timestamp!
  updatedAt: Timestamp!
  guild: Guild!
}

type GuildModuleBirthday {
  guildId: String!
  enabled: Boolean!
  birthdayChannelId: String
  createdAt: Timestamp!
  updatedAt: Timestamp!
  guild: Guild!
}

type GuildModuleCountToNumber {
  channelId: String!
  guildId: String!
  enabled: Boolean!
  nextDate: Timestamp!
  threadId: Int!
  lastNumber: Int!
  lastMemberId: Int!
  createdAt: Timestamp!
  updatedAt: Timestamp!
}

type GuildModuleEasterEgg {
  guildId: String!
  enabled: Boolean!
  lastJoker: Timestamp!
  createdAt: Timestamp!
  updatedAt: Timestamp!
  guild: Guild!
}

type GuildAction {
  id: Int!
  key: String!
  values: String!
  executed: Boolean!
  guildId: String!
  createdAt: Timestamp!
  updatedAt: Timestamp!
  getGuild: Guild!
}

type Guild {
  guildId: String!
  enabled: Boolean!
  createdAt: Timestamp!
  updatedAt: Timestamp!
  moduleLevel: GuildModuleLevel
  moduleBirthday: GuildModuleBirthday
  moduleQotd: GuildModuleQotd
  moduleVoiceGrowth: GuildModuleVoiceGrowth
  message: GuildMessage
  messages: [GuildMessage!]
  translation: GuildTranslation
  translations: [GuildTranslation!]
  member: Member
  members: [Member!]
  discord: Discord!
  stats: GuildStatResolved!
  openAi: OpenAi!
}

type GuildModuleQotd {
  guildId: String!
  enabled: Boolean!
  levelingMultiplier: Int!
  messageId: String
  channelId: String
  createdAt: Timestamp!
  updatedAt: Timestamp!
}

type UserProfile {
  userId: String!
  tokens: Float!
  tokensUsed: Float!
  createdAt: Timestamp!
  updatedAt: Timestamp!
  user: User!
}

type User {
  userId: String!
  createdAt: Timestamp!
  updatedAt: Timestamp!
  profile: UserProfile!
}

type Discord {
  guildId: String
  userGuilds: [JSONObject!]!
  memberGuilds: [JSONObject!]!
  dashboardUserGuilds: [JSONObject!]!
  guild: JSONObject!
  guildChannels: [JSONObject!]!
  guildCategoryChannels: [JSONObject!]!
  guildTextChannels: [JSONObject!]!
  guildVoiceChannels: [JSONObject!]!
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

type GuildStatResolved {
  guildId: String
  staffMembersIds: [String!]!
  staffMembers: Float!
  bots: Float!
  eventsCreated: Float!
  eventsTriggered: Float!
  activity: Float!
  channels: Float!
  textChannels: Float!
  textChannelsMessages: JSONObject!
  voiceChannels: Float!
  voiceChannelsCallTime: JSONObject!
}

type OpenAi {
  guildId: String
  recommendation: String!
}

type ServerCountToNumber {
  guildId: String!
  nextDate: Timestamp!
  channelId: String!
  threadId: String!
  lastNumber: Float!
  lastUserId: String!
  createdAt: Timestamp!
  updatedAt: Timestamp!
  guild: Server!
}

type ServerEasterEgg {
  guildId: String!
  lastJoker: Timestamp!
  createdAt: Timestamp!
  updatedAt: Timestamp!
  guild: Server!
}

type ServerEvent {
  guildId: String!
  birthdayChannel: String!
  createdAt: Timestamp!
  updatedAt: Timestamp!
  guild: Server!
}

type ServerLevel {
  guildId: String!
  announcementChannel: String!
  leaderboardChannel: String!
  leaderboardLastWeek: Float!
  nicknames: Boolean!
  lastLeaderboard: Timestamp!
  createdAt: Timestamp!
  updatedAt: Timestamp!
  guild: Server!
}

type ServerVoiceGrowthChild {
  channelId: String!
  guildId: String!
  name: String!
  createdAt: Timestamp!
  updatedAt: Timestamp!
  serverVoiceGrowth: ServerVoiceGrowth!
}

type ServerVoiceGrowth {
  channelId: String!
  guildId: String!
  preset: String!
  prefix: String!
  manual: Boolean!
  createdAt: Timestamp!
  updatedAt: Timestamp!
  guild: Server!
  serverVoiceGrowthChildren: [ServerVoiceGrowthChild!]!
}

type Server {
  guildId: String!
  createdAt: Timestamp!
  updatedAt: Timestamp!
  serverCountToNumber: ServerCountToNumber!
  serverEasterEgg: ServerEasterEgg!
  serverEvent: ServerEvent!
  serverLevel: ServerLevel!
  serverUsers: [ServerUser!]!
  serverVoiceGrowths: [ServerVoiceGrowth!]!
}

type ServerUserDailyActivity {
  userId: String!
  guildId: String!
  pointsMon: Float!
  pointsTue: Float!
  pointsWed: Float!
  pointsThu: Float!
  pointsFri: Float!
  pointsSat: Float!
  pointsSun: Float!
  points: Float!
  createdAt: Timestamp!
  updatedAt: Timestamp!
  serverUser: ServerUser!
}

type ServerUser {
  userId: String!
  guildId: String!
  birthdayDate: Timestamp
  birthday: Float
  createdAt: Timestamp!
  updatedAt: Timestamp!
  guild: Server!
  serverUserDailyActivity: ServerUserDailyActivity!
  serverUserLevel: ServerUserLevel!
}

type ServerUserLevel {
  userId: String!
  guildId: String!
  spamCheck: Float!
  cooldownCount: Float!
  cooldownTime: Timestamp!
  inCall: Boolean!
  callStart: Timestamp!
  callAlone: Boolean!
  points: Float!
  pointsAvailable: Float!
  createdAt: Timestamp!
  updatedAt: Timestamp!
  serverUser: ServerUser!
}

type Migrate {
  success: Boolean
  guildId: String
  users: Float
  errors: [String!]
}

type Query {
  guilds: [Guild!]!
  guild(id: String!): Guild!
  findAll: [MemberModuleLevelDay!]!
  findOne(guildId: String!, userId: String!): MemberModuleLevelDay!
  guildModuleBirthday(id: String!): GuildModuleBirthday!
  findAllByGuild(guildId: String!): [Member!]!
  discord: Discord!
  guildStat(guildId: String!): GuildStatResolved!
  guildModuleVoiceGrowthChild(guildId: String!, channelId: String!): GuildModuleVoiceGrowthChild!
  guildActions: [GuildAction!]!
  guildAction(id: Int!): GuildAction!
  guildModuleCountToNumber(id: String!): GuildModuleCountToNumber!
  guildModuleEasterEgg(id: String!): GuildModuleEasterEgg!
}

type Mutation {
  createGuild(createGuildInput: CreateGuildInput!): Guild!
  updateGuild(updateGuildInput: UpdateGuildInput!): Guild!
  removeGuild(id: String!): Guild!
  createGuildModuleLevel(createGuildModuleLevelInput: CreateGuildModuleLevelInput!): GuildModuleLevel!
  updateGuildModuleLevel(updateGuildModuleLevelInput: UpdateGuildModuleLevelInput!): GuildModuleLevel!
  removeGuildModuleLevel(id: String!): GuildModuleLevel!
  createGuildModuleBirthday(createGuildModuleBirthdayInput: CreateGuildModuleBirthdayInput!): GuildModuleBirthday!
  updateGuildModuleBirthday(updateGuildModuleBirthdayInput: UpdateGuildModuleBirthdayInput!): GuildModuleBirthday!
  removeGuildModuleBirthday(id: String!): GuildModuleBirthday!
  createGuildModuleQotd(createGuildModuleQotdInput: CreateGuildModuleQotdInput!): GuildModuleQotd!
  updateGuildModuleQotd(updateGuildModuleQotdInput: UpdateGuildModuleQotdInput!): GuildModuleQotd!
  removeGuildModuleQotd(id: String!): GuildModuleQotd!
  createGuildMessage(createGuildMessageInput: CreateGuildMessageInput!): GuildMessage!
  updateGuildMessage(updateGuildMessageInput: UpdateGuildMessageInput!): GuildMessage!
  removeGuildMessage(id: Int!): GuildMessage!
  createGuildTranslation(createGuildTranslationInput: CreateGuildTranslationInput!): GuildTranslation!
  updateGuildTranslation(updateGuildTranslationInput: UpdateGuildTranslationInput!): GuildTranslation!
  removeGuildTranslation(guildId: String!, key: String!): GuildTranslation!
  createMember(createMemberInput: CreateMemberInput!): Member!
  updateMember(updateMemberInput: UpdateMemberInput!): Member!
  removeMember(id: String!): Member!
  createGuildModuleVoiceGrowth(createGuildModuleVoiceGrowthInput: CreateGuildModuleVoiceGrowthInput!): GuildModuleVoiceGrowth!
  updateGuildModuleVoiceGrowth(updateGuildModuleVoiceGrowthInput: UpdateGuildModuleVoiceGrowthInput!): GuildModuleVoiceGrowth!
  removeGuildModuleVoiceGrowth(id: String!): GuildModuleVoiceGrowth!
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: String!): User!
  createUserProfile(createUserProfileInput: CreateUserProfileInput!): UserProfile!
  updateUserProfile(updateUserProfileInput: UpdateUserProfileInput!): UserProfile!
  removeUserProfile(id: String!): UserProfile!
  createMemberModuleLevel(createMemberModuleLevelInput: CreateMemberModuleLevelInput!): MemberModuleLevel!
  updateMemberModuleLevel(updateMemberModuleLevelInput: UpdateMemberModuleLevelInput!): MemberModuleLevel!
  removeMemberModuleLevel(id: String!): MemberModuleLevel!
  createMemberModuleLevelDay(createMemberModuleLevelDayInput: CreateMemberModuleLevelDayInput!): MemberModuleLevelDay!
  updateMemberModuleLevelDay(updateMemberModuleLevelDayInput: UpdateMemberModuleLevelDayInput!): MemberModuleLevelDay!
  removeMemberModuleLevelDay(guildId: Int!): MemberModuleLevelDay!
  createGuildModuleVoiceGrowthChild(createGuildModuleVoiceGrowthChildInput: CreateGuildModuleVoiceGrowthChildInput!): GuildModuleVoiceGrowthChild!
  updateGuildModuleVoiceGrowthChild(updateGuildModuleVoiceGrowthChildInput: UpdateGuildModuleVoiceGrowthChildInput!): GuildModuleVoiceGrowthChild!
  removeGuildModuleVoiceGrowthChild(guildId: String!, channelId: String!): GuildModuleVoiceGrowthChild!
  createGuildAction(createGuildActionInput: CreateGuildActionInput!): GuildAction!
  updateGuildAction(updateGuildActionInput: UpdateGuildActionInput!): GuildAction!
  removeGuildAction(id: Int!): GuildAction!
  createGuildModuleCountToNumber(createGuildModuleCountToNumberInput: CreateGuildModuleCountToNumberInput!): GuildModuleCountToNumber!
  updateGuildModuleCountToNumber(updateGuildModuleCountToNumberInput: UpdateGuildModuleCountToNumberInput!): GuildModuleCountToNumber!
  removeGuildModuleCountToNumber(id: String!): GuildModuleCountToNumber!
  createGuildModuleEasterEgg(createGuildModuleEasterEggInput: CreateGuildModuleEasterEggInput!): GuildModuleEasterEgg!
  updateGuildModuleEasterEgg(updateGuildModuleEasterEggInput: UpdateGuildModuleEasterEggInput!): GuildModuleEasterEgg!
  removeGuildModuleEasterEgg(id: String!): GuildModuleEasterEgg!
  migrateGuild(guildId: String!): Migrate!
}

input CreateGuildInput {
  guildId: String!
  enabled: Boolean!
}

input UpdateGuildInput {
  guildId: String
  enabled: Boolean
}

input CreateGuildModuleLevelInput {
  guildId: String!
  enabled: Boolean!
  levelingMultiplier: Int!
  announcementChannelId: String
  leaderboardChannelId: String
  leaderboardLastWeek: Int
  nicknames: Boolean!
  lastLeaderboard: Timestamp!
}

input UpdateGuildModuleLevelInput {
  guildId: String
  enabled: Boolean
  levelingMultiplier: Int
  announcementChannelId: String
  leaderboardChannelId: String
  leaderboardLastWeek: Int
  nicknames: Boolean
  lastLeaderboard: Timestamp
}

input CreateGuildModuleBirthdayInput {
  guildId: String!
  enabled: Boolean!
  birthdayChannelId: String
}

input UpdateGuildModuleBirthdayInput {
  guildId: String
  enabled: Boolean
  birthdayChannelId: String
}

input CreateGuildModuleQotdInput {
  enabled: Boolean!
  channelId: String!
  messageId: String!
  nicknames: Boolean!
}

input UpdateGuildModuleQotdInput {
  enabled: Boolean
  channelId: String
  messageId: String
  nicknames: Boolean
  guildId: Int!
}

input CreateGuildMessageInput {
  id: Int!
  messageId: String!
  channelId: String!
}

input UpdateGuildMessageInput {
  id: Int
  messageId: String
  channelId: String
}

input CreateGuildTranslationInput {
  guildId: String!
  key: String!
  value: String!
}

input UpdateGuildTranslationInput {
  guildId: String
  key: String
  value: String
}

input CreateMemberInput {
  guildId: String!
  userId: String!
  birthday: Int
  nickname: String
}

input UpdateMemberInput {
  guildId: String
  userId: String
  birthday: Int
  nickname: String
}

input CreateGuildModuleVoiceGrowthInput {
  channelId: String!
  guildId: String!
  enabled: Boolean! = false
  preset: String
  prefix: String
  manual: Boolean! = false
}

input UpdateGuildModuleVoiceGrowthInput {
  channelId: String
  guildId: String
  enabled: Boolean = false
  preset: String
  prefix: String
  manual: Boolean = false
  id: Int!
}

input CreateUserInput {
  user_id: String!
}

input UpdateUserInput {
  user_id: Int!
}

input CreateUserProfileInput {
  user_id: String!
  tokens: Int!
  tokens_used: Int!
}

input UpdateUserProfileInput {
  user_id: String
  tokens: Int
  tokens_used: Int
}

input CreateMemberModuleLevelInput {
  guildId: String!
  userId: String!
  spamCheck: Int! = 0
  cooldownCount: Int! = 0
  cooldownTime: Timestamp! = 1699373050759
  callStart: Timestamp! = 1699373050759
  points: Int! = 0
}

input UpdateMemberModuleLevelInput {
  guildId: Int!
  userId: Int!
  spamCheck: Int = 0
  cooldownCount: Int = 0
  cooldownTime: Timestamp = 1699373050759
  callStart: Timestamp = 1699373050759
  points: Int = 0
}

input CreateMemberModuleLevelDayInput {
  guildId: String!
  userId: String!
  pointsMonday: Int! = 0
  pointsTuesday: Int! = 0
  pointsWednesday: Int! = 0
  pointsThursday: Int! = 0
  pointsFriday: Int! = 0
  pointsSaturday: Int! = 0
  pointsSunday: Int! = 0
}

input UpdateMemberModuleLevelDayInput {
  guildId: Int!
  userId: Int!
  pointsMonday: Int = 0
  pointsTuesday: Int = 0
  pointsWednesday: Int = 0
  pointsThursday: Int = 0
  pointsFriday: Int = 0
  pointsSaturday: Int = 0
  pointsSunday: Int = 0
}

input CreateGuildModuleVoiceGrowthChildInput {
  channelId: String!
  guildId: String!
  name: String!
}

input UpdateGuildModuleVoiceGrowthChildInput {
  channelId: String
  guildId: String
  name: String
  id: Int!
}

input CreateGuildActionInput {
  key: String!
  values: String!
  executed: Boolean!
  guildId: String!
}

input UpdateGuildActionInput {
  key: String
  values: String
  executed: Boolean
  guildId: String
  id: Int!
}

input CreateGuildModuleCountToNumberInput {
  guildId: String!
  channelId: String!
  enabled: Boolean!
}

input UpdateGuildModuleCountToNumberInput {
  guildId: String
  channelId: String
  enabled: Boolean
}

input CreateGuildModuleEasterEggInput {
  guildId: String!
  enabled: Boolean!
}

input UpdateGuildModuleEasterEggInput {
  guildId: String
  enabled: Boolean
}