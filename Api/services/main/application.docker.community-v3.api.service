[Unit]
Description=Community API Docker Service
After=docker.service
Requires=docker.service

[Service]
Restart=always

# .env
Environment=NODE_ENV=development|production|staging

# API
Environment=CLIENT_URI=http://localhost:8080
Environment=CLIENT_DASHBOARD_URI=http://localhost:8080/dashboard
Environment=PORT=3000

# Discord
Environment=CLIENT_ID=833083221775745074
Environment=CLIENT_SECRET=0-0
Environment=REDIRECT_URI=http://localhost:3000/auth/discord
Environment=BOT_TOKEN=0.0.0

Environment=DATABASE_URL=postgresql://username:password@localhost/community?connect_timeout=360
Environment=DATABASE_SSL=false

Environment=DATABASE_MIGRATION_URL=postgresql://username:password@localhost/community?connect_timeout=360
Environment=DATABASE_MIGRATION_SSL=false

Environment=JWT_SECRET=secret
Environment=OPENAI_API_KEY=0-0

User=server
Group=server
ExecStartPre=-/usr/bin/docker stop application.docker.community-v3.api
ExecStartPre=-/usr/bin/docker rm application.docker.community-v3.api
ExecStartPre=/usr/bin/docker pull ghcr.io/lyttle-development/community.v3.api:main
ExecStart=/usr/bin/docker run --name application.docker.community-v3.api -e NODE_ENV -e CLIENT_URI -e CLIENT_DASHBOARD_URI -e PORT -e CLIENT_ID -e CLIENT_SECRET -e REDIRECT_URI -e BOT_TOKEN -e DATABASE_URL -e DATABASE_SSL -e DATABASE_MIGRATION_URL -e DATABASE_MIGRATION_SSL -e JWT_SECRET -e OPENAI_API_KEY -p 3000:3000 ghcr.io/lyttle-development/community.v3.api:main
ExecStop=/usr/bin/docker stop application.docker.community-v3.api

[Install]
WantedBy=multi-user.target
